

1. What is responsible for defining the routes of the games resource?
The create_router file containing various API design principles such as GET, POST, DELETE and PUT.

2. What do you notice about the folder structure? Whats the client responsible for? Whats the server responsible for?

The client is structured in a way which contains vue components which will then be rendered for the use to see on screen.
It is responsible for what goes on Front End. The server is dealing with operations and requests at the Back End of the App.

3. What are the the responsibilities of server.js?
It's acting like a bridge between the Front-End and Back-End. Dealing with requests and also data.

4. What are the responsibilities of the gamesRouter?
Its responsibilities are to create and specify a particular path.

5. What process does the the client (front-end) use to communicate with the server?
The Client communicates with the server through request, response messages. The client sends a request and the
server returns a response.


6. What optional second argument does the fetch method take? And what is it used for in this application? Hint: See Using Fetch on the MDN docs
The optional second argument is Request. It is used to create a new Request Object.

7. Which of the games API routes does the front-end application consume (i.e. make requests to)?
It takes in a POST request.

8. What are we using the MongoDB Driver for?
We are using it convert different data types used in the application to JSON types.
